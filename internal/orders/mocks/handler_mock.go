// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/dkmelnik/go-musthave-diploma/internal/models"
	dto "github.com/dkmelnik/go-musthave-diploma/internal/orders/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockorderService is a mock of orderService interface.
type MockorderService struct {
	ctrl     *gomock.Controller
	recorder *MockorderServiceMockRecorder
}

// MockorderServiceMockRecorder is the mock recorder for MockorderService.
type MockorderServiceMockRecorder struct {
	mock *MockorderService
}

// NewMockorderService creates a new mock instance.
func NewMockorderService(ctrl *gomock.Controller) *MockorderService {
	mock := &MockorderService{ctrl: ctrl}
	mock.recorder = &MockorderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockorderService) EXPECT() *MockorderServiceMockRecorder {
	return m.recorder
}

// CreateIfNotExist mocks base method.
func (m *MockorderService) CreateIfNotExist(ctx context.Context, userID, orderNumber string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIfNotExist", ctx, userID, orderNumber)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateIfNotExist indicates an expected call of CreateIfNotExist.
func (mr *MockorderServiceMockRecorder) CreateIfNotExist(ctx, userID, orderNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIfNotExist", reflect.TypeOf((*MockorderService)(nil).CreateIfNotExist), ctx, userID, orderNumber)
}

// GetAllUserOrders mocks base method.
func (m *MockorderService) GetAllUserOrders(ctx context.Context, userID models.ModelID) ([]dto.OrderResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUserOrders", ctx, userID)
	ret0, _ := ret[0].([]dto.OrderResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUserOrders indicates an expected call of GetAllUserOrders.
func (mr *MockorderServiceMockRecorder) GetAllUserOrders(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUserOrders", reflect.TypeOf((*MockorderService)(nil).GetAllUserOrders), ctx, userID)
}
